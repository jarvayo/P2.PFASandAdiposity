p_overall_totfat <- ggplot(overall_totfat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
geom_pointrange() +
scale_y_continuous(name = "Body fat mass (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 24))
p_overall_totfat
##### LOAD PACKAGES
library("bkmr")
library("ggplot2")
library("beepr")
library("tidyverse")
##### LOAD DATASET
PFAS_A <-read_csv("C:/Users/jarva/Desktop/James-Todd Lab/P3.PFASandAdiposity/Data/PFAS_A.csv")
##### LOAD WORKSPACE
load("C:/Users/jarva/Desktop/James-Todd Lab/P3.PFASandAdiposity/Data/P3_BKMR_A.Rdata")
##### PREPARE VARIABLES FOR BKMR MODELS #####
##### ANTHRO DATASET (N = 549)
# CREATE MIXTURE OF PFAS
mixture_a <- as.matrix(cbind(PFAS_A$PFOS, PFAS_A$PFOA, PFAS_A$PFNA, PFAS_A$PFHxS,
PFAS_A$MeFOSAA, PFAS_A$EtFOSAA))
# RENAME VARIABLES IN MIXTURE
colnames(mixture_a) <- c("PFOS", "PFOA", "PFNA", "PFHxS", "MeFOSAA", "EtFOSAA")
# LOG2-TRANSFORM MIXTURE
l2mixture_a <- apply(mixture_a, 2, log2)
# SCALE MIXTURE VARIABLES TO THE MEAN
l2mixture_a_z <- scale(l2mixture_a)
# SET THE OUTCOME
Weight <- PFAS_A$Weight
Waist <- PFAS_A$Waist
# BMI <- PFAS_A$LNBMI
# WHR <- PFAS_A$WHR
# WHtR <- PFAS_A$WHtR
# MUAC <- PFAS_A$MUAC
# FatPct <- PFAS_A$FatPct
# FatMass <- PFAS_A$LNFAT
# CREAT THE COVARIATE MATRIX
cov_a <- as.matrix(cbind(PFAS_A$age_s, PFAS_A$race, PFAS_A$bmi_cat, PFAS_A$smoke,
PFAS_A$parity, PFAS_A$married, PFAS_A$fish_s, PFAS_A$height_s))
# SET THE SEED
set.seed(1234)
# CREATE KNOTS
knots_al2_z <- fields::cover.design(l2mixture_a_z, nd = 50)$design
##### TRANSFORM VARIABLES TO NUMERIC FOR BKMR COVARIATE MATRIX
# RENAME
PFAS_A$age <- PFAS_A$age_mom_enroll_d
PFAS_A$menar <- PFAS_A$mom_firstperiod_12y
PFAS_A$bmi <- PFAS_A$bmi_mom_prepreg_d
PFAS_A$race <- PFAS_A$race2_mom_epi_epia_d
PFAS_A$income <- PFAS_A$gt70k
PFAS_A$parity <- PFAS_A$parity_d
PFAS_A$smoke <- PFAS_A$smokpreg_final_d
PFAS_A$married <- PFAS_A$married_cohab
PFAS_A$edu <- PFAS_A$coll_grad
PFAS_A$fish <- PFAS_A$fish_d_f1
PFAS_A$darkmeat <- PFAS_A$dark_meat_f1
# REFACTOR AND RELABEL
PFAS_A$bmi_cat <- ifelse(PFAS_A$bmi <18.5, 0,
ifelse(PFAS_A$bmi >=18.5 & PFAS_A$bmi < 25.0, 1,
ifelse(PFAS_A$bmi >=25.0 & PFAS_A$bmi < 30.0, 2,
ifelse(PFAS_A$bmi >=30.0 & PFAS_A$bmi < 35.0, 3,
ifelse(PFAS_A$bmi >=35.0, 4, 99)))))
PFAS_A$race <- ifelse(PFAS_A$race == "white", 0,
ifelse(PFAS_A$race == "black", 1,
ifelse(PFAS_A$race == "hispa", 2,
ifelse(PFAS_A$race == "asian", 3,
ifelse(PFAS_A$race == "other", 4, 4)))))
PFAS_A$income <- ifelse(PFAS_A$income == 1, 1, 0)
PFAS_A$parity <- ifelse(PFAS_A$parity == 0, 0,
ifelse(PFAS_A$parity == 1, 1,
ifelse(PFAS_A$parity > 1, 2, 0)))
PFAS_A$smoke <- ifelse(PFAS_A$smoke == "former", 0,
ifelse(PFAS_A$smoke == "smoke preg", 1,
ifelse(PFAS_A$smoke == "xnever", 2, 2)))
PFAS_A$married <- ifelse(PFAS_A$married == 1, 1, 0)
PFAS_A$edu <- ifelse(PFAS_A$edu == 1, 1, 0)
# SET CATEGORICAL VARIABLES AS FACTORS
PFAS_A$bmi_cat <- as.factor(PFAS_A$bmi_cat)
PFAS_A$race <- as.factor(PFAS_A$race)
PFAS_A$income <- as.factor(PFAS_A$income)
PFAS_A$parity <- as.factor(PFAS_A$parity)
PFAS_A$smoke <- as.factor(PFAS_A$smoke)
PFAS_A$married <- as.factor(PFAS_A$married)
PFAS_A$edu <- as.factor(PFAS_A$edu)
# CENTER AND SCALE CONTINUOUS VARIABLES
PFAS_A$height_s <- scale(PFAS_A$height)
PFAS_A$age_s <- scale(PFAS_A$age)
PFAS_A$menar_s <- scale(PFAS_A$menar)
PFAS_A$fish_s <- scale(PFAS_A$fish)
PFAS_A$darkmeat_s <- scale(PFAS_A$darkmeat)
##### PREPARE VARIABLES FOR BKMR MODELS #####
##### ANTHRO DATASET (N = 549)
# CREATE MIXTURE OF PFAS
mixture_a <- as.matrix(cbind(PFAS_A$PFOS, PFAS_A$PFOA, PFAS_A$PFNA, PFAS_A$PFHxS,
PFAS_A$MeFOSAA, PFAS_A$EtFOSAA))
# RENAME VARIABLES IN MIXTURE
colnames(mixture_a) <- c("PFOS", "PFOA", "PFNA", "PFHxS", "MeFOSAA", "EtFOSAA")
# LOG2-TRANSFORM MIXTURE
l2mixture_a <- apply(mixture_a, 2, log2)
# SCALE MIXTURE VARIABLES TO THE MEAN
l2mixture_a_z <- scale(l2mixture_a)
# SET THE OUTCOME
Weight <- PFAS_A$Weight
Waist <- PFAS_A$Waist
# BMI <- PFAS_A$LNBMI
# WHR <- PFAS_A$WHR
# WHtR <- PFAS_A$WHtR
# MUAC <- PFAS_A$MUAC
# FatPct <- PFAS_A$FatPct
# FatMass <- PFAS_A$LNFAT
# CREAT THE COVARIATE MATRIX
cov_a <- as.matrix(cbind(PFAS_A$age_s, PFAS_A$race, PFAS_A$bmi_cat, PFAS_A$smoke,
PFAS_A$parity, PFAS_A$married, PFAS_A$fish_s, PFAS_A$height_s))
# SET THE SEED
set.seed(1234)
# CREATE KNOTS
knots_al2_z <- fields::cover.design(l2mixture_a_z, nd = 50)$design
##### VALUES TO KEEP AFTER BURIN/THIN
#
sel <- seq(0,20000,by = 50)
##### ACCESS CONVERGENCE WITH TRACEPLOTS
TracePlot(fit = l2m_wt, par = "beta", sel = sel)
TracePlot(fit = l2m_waist, par = "beta", sel = sel)
# TracePlot(fit = l2m_bmi, par = "beta", sel = sel)
# TracePlot(fit = l2m_whr, par = "beta", sel = sel)
# TracePlot(fit = l2m_whtr, par = "beta", sel = sel)
# TracePlot(fit = l2m_muac, par = "beta", sel = sel)
# TracePlot(fit = m_bfat, par = "beta", sel = sel)
# TracePlot(fit = m_fat, par = "beta", sel = sel)
##### VALUES TO KEEP AFTER BURNING/THIN (ACCORDING TO THE TRACEPLOT FUNCTION ABOVE)
sel_final <- seq(1200, 20000, by = 1)
##### DETERMINE RISK ASSOCIATED WITH THE OVERALL MIXTURE
# WEIGHT
overall_wt <- OverallRiskSummaries(fit = l2m_wt, q.fixed = 0.50, sel = sel_final,
method = "approx", qs = seq(0.25, 0.75, by = 0.05))
# WAIST CIRCUMFERENCE
overall_waist <- OverallRiskSummaries(fit = l2m_waist, q.fixed = 0.50, sel = sel_final,
method = "approx", qs = seq(0.25, 0.75, by = 0.05))
# # BMI
# overall_bmi <- OverallRiskSummaries(fit = l2m_bmi, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # WAIST-TO-HIP RATIO
# overall_whr <- OverallRiskSummaries(fit = l2m_whr, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # WAIST-TO-HEIGHT RATIO
# overall_whtr <- OverallRiskSummaries(fit = l2m_whtr, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # MUAC
# overall_muac <- OverallRiskSummaries(fit = l2m_muac, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # BODY FAT %
# overall_bfat <- OverallRiskSummaries(fit = m_bfat, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # BODT FAT MASS
# overall_fat <- OverallRiskSummaries(fit = m_fat, q.fixed = 0.50, sel = sel_final,
#                                       method = "approx", qs = seq(0.25, 0.75, by = 0.05))
##### PLOT RISK ASSOCIATED WITH THE OVERALL MIXTURE
# WEIGHT
p_overall_wt <- ggplot(overall_wt, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Weight (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 25))
p_overall_wt
# WAIST CIRCUMFERENCE
p_overall_waist <- ggplot(overall_waist, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Waist circ. (cm)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 25))
p_overall_waist
# # BMI
# p_overall_bmi <- ggplot(overall_bmi, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "BMI (% difference)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_bmi
# # WAIST-TO-HIP RATIO
# p_overall_whr <- ggplot(overall_whr, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "Waist-to-hip ratio")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_whr
#
#
# # WAIST-TO-HIP RATIO
# p_overall_whtr <- ggplot(overall_whtr, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "Waist-to-height ratio")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_whtr
#
#
# # MUAC
# p_overall_muac <- ggplot(overall_muac, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "MUAC (cm)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_muac
#
#
# # BODY FAT %
# p_overall_bfat <- ggplot(overall_bfat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "Body fat (%)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_bfat
#
#
# # BODY FAT MASS
# p_overall_fat <- ggplot(overall_fat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "Body fat mass (kg)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_fat
p_overall_wt <- ggplot(overall_wt, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Weight (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 24))
p_overall_wt
# WAIST CIRCUMFERENCE
p_overall_waist <- ggplot(overall_waist, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Waist circumference (cm)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 24))
p_overall_waist
p_overall_waist <- ggplot(overall_waist, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Waist circ (cm)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 24))
p_overall_waist
##### LOAD PACKAGES
library("dplyr")
library("sas7bdat")
library("haven")
library("data.table")
library("readxl")
##### LOAD DATASET
PFAS <- read_sas("C:/Users/jarva/Desktop/James-Todd Lab/P2.PFASandWeightTrajectories/Data/ja_030823.sas7bdat")
FFQ <- read_sas("C:/Users/jarva/Desktop/James-Todd Lab/P2.PFASandWeightTrajectories/Data/ja_062922_FFQ.sas7bdat")
# DIET <- read_excel("C:/Users/jarva/Desktop/James-Todd Lab/P1.PFASandBP/Data/DIET.xlsx")
# ADD FFQ VARIABLES TO PFAS DATASET
FFQ <- subset(FFQ, select = c(aid, fish_d_f1, dark_meat_f1))
PFAS <- merge(PFAS, FFQ, by = "aid")
# PFAS <- merge(PFAS, DIET, by = "aid")
##### CHECK FOR DUPLICATE IDS IN THE DATASET
sum(duplicated(PFAS$familyid)) # 28 DUPLICATES
# DROP THE SECOND DUPLICATE
DUPS <- PFAS[duplicated(PFAS$familyid),]
PFAS <- PFAS[order(PFAS$familyid),]
PFAS <- PFAS[!duplicated(PFAS$familyid),]
##### REPLACE MISSING VALUES AND BLANK SPACES WITH "NA"
PFAS <- PFAS %>% mutate_all(~ifelse(is.nan(.), NA, .))
PFAS[PFAS == ""] <- NA
##### REPLACE IMPLAUSIBLE VALUES WITH "NA"
PFAS$WEIGHLBS_OYQ <- ifelse(PFAS$WEIGHLBS_OYQ <= 0, NA, PFAS$WEIGHLBS_OYQ)
PFAS$WEIGHKGS_OYQ <- ifelse(PFAS$WEIGHKGS_OYQ <= 0, NA, PFAS$WEIGHKGS_OYQ)
PFAS$WEIGHLBS_SYQ <- ifelse(PFAS$WEIGHLBS_SYQ <= 0, NA, PFAS$WEIGHLBS_SYQ)
PFAS$WEIGHKGS_SYQ <- ifelse(PFAS$WEIGHKGS_SYQ <= 0, NA, PFAS$WEIGHKGS_SYQ)
PFAS$WEIGHLBS_4YQ <- ifelse(PFAS$WEIGHLBS_4YQ <= 0, NA, PFAS$WEIGHLBS_4YQ)
PFAS$WEIGHKGS_4YQ <- ifelse(PFAS$WEIGHKGS_4YQ <= 0, NA, PFAS$WEIGHKGS_4YQ)
PFAS$WEIGHLBS_QU5Y <- ifelse(PFAS$WEIGHLBS_QU5Y <= 0, NA, PFAS$WEIGHLBS_QU5Y)
PFAS$WEIGHKGS_QU5Y <- ifelse(PFAS$WEIGHKGS_QU5Y <= 0, NA, PFAS$WEIGHKGS_QU5Y)
PFAS$WEIGHLBS_QU6Y <- ifelse(PFAS$WEIGHLBS_QU6Y <= 0, NA, PFAS$WEIGHLBS_QU6Y)
PFAS$WEIGHKGS_QU6Y <- ifelse(PFAS$WEIGHKGS_QU6Y <= 0, NA, PFAS$WEIGHKGS_QU6Y)
PFAS$WEIGHLBS_8y <- ifelse(PFAS$WEIGHLBS_8y <= 0, NA, PFAS$WEIGHLBS_8y)
PFAS$WEIGHKG_8y <- ifelse(PFAS$WEIGHKG_8y <= 0, NA, PFAS$WEIGHKG_8y)
PFAS$WEIGH_9y <- ifelse(PFAS$WEIGH_9y <= 0, NA, PFAS$WEIGH_9y)
PFAS$WEIGHT_9y <- ifelse(PFAS$WEIGHT_9y <= 0, NA, PFAS$WEIGHT_9y)
PFAS$WEIGH_10y <- ifelse(PFAS$WEIGH_10y <= 0, NA, PFAS$WEIGH_10y)
PFAS$WEIGHT_10y <- ifelse(PFAS$WEIGHT_10y <= 0, NA, PFAS$WEIGHT_10y)
PFAS$mweight_11y <- ifelse(PFAS$mweight_11y <= 0, NA, PFAS$mweight_11y)
PFAS$c_age_days_comp_d_qu_9y <- ifelse(PFAS$c_age_days_comp_d_qu_9y <= 0, NA, PFAS$c_age_days_comp_d_qu_9y)
PFAS$c_age_days_comp_d_qu_10y <- ifelse(PFAS$c_age_days_comp_d_qu_10y <= 0, NA, PFAS$c_age_days_comp_d_qu_10y)
PFAS$c_age_days_comp_d_qu_11y <- ifelse(PFAS$c_age_days_comp_d_qu_11y <= 0, NA, PFAS$c_age_days_comp_d_qu_11y)
# summary(PFAS$WEIGHLBS_OYQ)
# summary(PFAS$WEIGHKGS_OYQ)
# summary(PFAS$WEIGHLBS_SYQ)
# summary(PFAS$WEIGHKGS_SYQ)
# summary(PFAS$WEIGHLBS_4YQ)
# summary(PFAS$WEIGHKGS_4YQ)
# summary(PFAS$WEIGHLBS_QU5Y)
# summary(PFAS$WEIGHKGS_QU5Y)
# summary(PFAS$WEIGHLBS_QU6Y)
# summary(PFAS$WEIGHKGS_QU6Y)
# summary(PFAS$WEIGHLBS_8y)
# summary(PFAS$WEIGHKG_8y)
# summary(PFAS$WEIGH_9y)
# summary(PFAS$WEIGHT_9y)
# summary(PFAS$WEIGH_10y)
# summary(PFAS$WEIGHT_10y)
# summary(PFAS$mweight_11y)
# summary(PFAS$mom_weight_lbs_qu14)
# summary(PFAS$mom_weight_kg_qu14)
# summary(PFAS$mom_weight_lbs_qu15)
# summary(PFAS$mom_weight_kg_qu15)
# summary(PFAS$mom_weight_lbs_qu16)
# summary(PFAS$mom_weight_kg_qu16)
# summary(PFAS$c_age_days_comp_d_qu_9y)
# summary(PFAS$c_age_days_comp_d_qu_10y)
# summary(PFAS$c_age_days_comp_d_qu_11y)
##### RENAME VARIABLES
# PFAS AND LOD
colnames(PFAS)[colnames(PFAS) == "Me_PFOSA_AcOH2"] <- "MeFOSAA"
colnames(PFAS)[colnames(PFAS) == "Et_PFOSA_AcOH"] <- "EtFOSAA"
colnames(PFAS)[colnames(PFAS) == "PFNA2"] <- "PFNA"
colnames(PFAS)[colnames(PFAS) == "PFOSLOD"] <- "LOD_PFOS"
colnames(PFAS)[colnames(PFAS) == "PFOALOD"] <- "LOD_PFOA"
colnames(PFAS)[colnames(PFAS) == "pfna2LOD"] <- "LOD_PFNA"
colnames(PFAS)[colnames(PFAS) == "pfhxsLOD"] <- "LOD_PFHxS"
colnames(PFAS)[colnames(PFAS) == "mefosaaLOD"] <- "LOD_MeF"
colnames(PFAS)[colnames(PFAS) == "etfosaaLOD"] <- "LOD_EtF"
# DAYS POSTPARTUM AT WEIGHT MEASUREMENT (RESEARCH ASSISTANT MEASURED)
colnames(PFAS)[colnames(PFAS) == "c_age_days_COMP_D_MSM"] <- "DPP_RAV1"
colnames(PFAS)[colnames(PFAS) == "c_age_days_COMP_D_MAT"] <- "DPP_RAV2"
colnames(PFAS)[colnames(PFAS) == "c_age_days_COMP_D_MA7Y"] <- "DPP_RAV3"
colnames(PFAS)[colnames(PFAS) == "c_age_days_comp_d_ma_12y"] <- "DPP_RAV4"
# AGE AT WEIGHT MEASUREMENT (RESEARCH ASSISTANT MEASURED)
colnames(PFAS)[colnames(PFAS) == "m_age_days_COMP_D_MSM"] <- "AGE_RAV1"
colnames(PFAS)[colnames(PFAS) == "m_age_days_COMP_D_MAT"] <- "AGE_RAV2"
colnames(PFAS)[colnames(PFAS) == "m_age_days_COMP_D_MA7Y"] <- "AGE_RAV3"
colnames(PFAS)[colnames(PFAS) == "m_age_days_comp_d_ma_12y"] <- "AGE_RAV4"
# WEIGHT MEASUREMENT (RESEARCH ASSISTANT MEASURED, KG)
colnames(PFAS)[colnames(PFAS) == "weight_k_msm"] <- "WT_RAV1"
colnames(PFAS)[colnames(PFAS) == "MWEIGHT_MAT"] <- "WT_RAV2"
colnames(PFAS)[colnames(PFAS) == "MWEIGHT_MA7Y"] <- "WT_RAV3"
colnames(PFAS)[colnames(PFAS) == "mom_weight_12y"] <- "WT_RAV4"
# PREGNANCY STATUS (RESEARCH ASSISTANT MEASURED)
colnames(PFAS)[colnames(PFAS) == "PREGNANT_SMI"] <- "PREGHIST_RAV1"
colnames(PFAS)[colnames(PFAS) == "STILL_PREGNANT_SMI"] <- "PREGSTAT_RAV1"
colnames(PFAS)[colnames(PFAS) == "PREG_TYI"] <- "PREGHIST_RAV2"
colnames(PFAS)[colnames(PFAS) == "STLPREG_TYI"] <- "PREGSTAT_RAV2"
colnames(PFAS)[colnames(PFAS) == "PREG_IN7Y"] <- "PREGHIST_RAV3"
colnames(PFAS)[colnames(PFAS) == "STLPREG_IN7Y"] <- "PREGSTAT_RAV3"
colnames(PFAS)[colnames(PFAS) == "curr_preg_12y"] <- "PREGSTAT_RAV4"
colnames(PFAS)[colnames(PFAS) == "pregnant_now_qu17"] <- "PREGHIST_RAV5"
# WEIGHT MEASUREMENT (SELF-REPORTED)
colnames(PFAS)[colnames(PFAS) == "WEIGHLBS_OYQ"] <- "WTL_SR1"
colnames(PFAS)[colnames(PFAS) == "WEIGHKGS_OYQ"] <- "WTK_SR1"
colnames(PFAS)[colnames(PFAS) == "WEIGHLBS_SYQ"] <- "WTL_SR2"
colnames(PFAS)[colnames(PFAS) == "WEIGHKGS_SYQ"] <- "WTK_SR2"
colnames(PFAS)[colnames(PFAS) == "WEIGHLBS_4YQ"] <- "WTL_SR4"
colnames(PFAS)[colnames(PFAS) == "WEIGHKGS_4YQ"] <- "WTK_SR4"
colnames(PFAS)[colnames(PFAS) == "WEIGHLBS_QU5Y"] <- "WTL_SR5"
colnames(PFAS)[colnames(PFAS) == "WEIGHKGS_QU5Y"] <- "WTK_SR5"
colnames(PFAS)[colnames(PFAS) == "WEIGHLBS_QU6Y"] <- "WTL_SR6"
colnames(PFAS)[colnames(PFAS) == "WEIGHKGS_QU6Y"] <- "WTK_SR6"
colnames(PFAS)[colnames(PFAS) == "WEIGHLBS_8y"] <- "WTL_SR8"
colnames(PFAS)[colnames(PFAS) == "WEIGHKG_8y"] <- "WTK_SR8"
colnames(PFAS)[colnames(PFAS) == "WEIGH_9y"] <- "WTL_SR9"
colnames(PFAS)[colnames(PFAS) == "WEIGHT_9y"] <- "WTK_SR9"
colnames(PFAS)[colnames(PFAS) == "WEIGH_10y"] <- "WTL_SR10"
colnames(PFAS)[colnames(PFAS) == "WEIGHT_10y"] <- "WTK_SR10"
colnames(PFAS)[colnames(PFAS) == "mweight_11y"] <- "WTL_SR11"
colnames(PFAS)[colnames(PFAS) == "mom_weight_lbs_qu14"] <- "WTL_SR14"
colnames(PFAS)[colnames(PFAS) == "mom_weight_kg_qu14"] <- "WTK_SR14"
colnames(PFAS)[colnames(PFAS) == "mom_weight_lbs_qu15"] <- "WTL_SR15"
colnames(PFAS)[colnames(PFAS) == "mom_weight_kg_qu15"] <- "WTK_SR15"
colnames(PFAS)[colnames(PFAS) == "mom_weight_lbs_qu16"] <- "WTL_SR16"
colnames(PFAS)[colnames(PFAS) == "mom_weight_kg_qu16"] <- "WTK_SR16"
# PREGNANCY STATUS (SELF REPORTED)
colnames(PFAS)[colnames(PFAS) == "PREG_OYQ"] <- "PREGHIST_SR1"
colnames(PFAS)[colnames(PFAS) == "STLPREG_OYQ"] <- "PREGSTAT_SR1"
colnames(PFAS)[colnames(PFAS) == "PREG_SYQ"] <- "PREGHIST_SR2"
colnames(PFAS)[colnames(PFAS) == "STLPREG_SYQ"] <- "PREGSTAT_SR2"
colnames(PFAS)[colnames(PFAS) == "PREG_4YQ"] <- "PREGHIST_SR4"
colnames(PFAS)[colnames(PFAS) == "STLPREG_4YQ"] <- "PREGSTAT_SR4"
colnames(PFAS)[colnames(PFAS) == "STLPREG_QU5Y"] <- "PREGSTAT_SR5"
colnames(PFAS)[colnames(PFAS) == "STLPREG_QU6Y"] <- "PREGSTAT_SR6"
colnames(PFAS)[colnames(PFAS) == "STLPREG_8y"] <- "PREGSTAT_SR8"
colnames(PFAS)[colnames(PFAS) == "STLPREG_9y"] <- "PREGSTAT_SR9"
colnames(PFAS)[colnames(PFAS) == "STLPREG_10y"] <- "PREGSTAT_SR10"
colnames(PFAS)[colnames(PFAS) == "stlpreg_11y"] <- "PREGSTAT_SR11"
colnames(PFAS)[colnames(PFAS) == "mom_pregnant_qu14"] <- "PREGSTAT_SR14"
colnames(PFAS)[colnames(PFAS) == "mom_pregnant_qu15"] <- "PREGSTAT_SR15"
colnames(PFAS)[colnames(PFAS) == "mom_pregnant_qu16"] <- "PREGSTAT_SR16"
# DAYS POSTPARTUM AT QUESTIONNAIRE(SELF-REPORTED)
# summary(PFAS$c_age_days_COMP_D_OYQ)
# summary(PFAS$c_age_days_COMP_D_SYQ)
# summary(PFAS$c_age_days_COMP_D_4YQ)
# summary(PFAS$c_age_days_COMP_D_QU5Y)
# summary(PFAS$c_age_days_COMP_D_QU6Y)
# summary(PFAS$c_age_days_comp_d_qu_8y)
# summary(PFAS$c_age_days_comp_d_qu_9y)
# summary(PFAS$c_age_days_comp_d_qu_10y)
# summary(PFAS$c_age_days_comp_d_qu_11y)
# summary(PFAS$child_age_days_qu14)
# summary(PFAS$child_age_days_qu15)
# summary(PFAS$child_age_days_qu16)
colnames(PFAS)[colnames(PFAS) == "c_age_days_COMP_D_OYQ"] <- "DPP_SR1"
colnames(PFAS)[colnames(PFAS) == "c_age_days_COMP_D_SYQ"] <- "DPP_SR2"
colnames(PFAS)[colnames(PFAS) == "c_age_days_COMP_D_4YQ"] <- "DPP_SR4"
colnames(PFAS)[colnames(PFAS) == "c_age_days_COMP_D_QU5Y"] <- "DPP_SR5"
colnames(PFAS)[colnames(PFAS) == "c_age_days_COMP_D_QU6Y"] <- "DPP_SR6"
colnames(PFAS)[colnames(PFAS) == "c_age_days_comp_d_qu_8y"] <- "DPP_SR8"
colnames(PFAS)[colnames(PFAS) == "c_age_days_comp_d_qu_9y"] <- "DPP_SR9"
colnames(PFAS)[colnames(PFAS) == "c_age_days_comp_d_qu_10y"] <- "DPP_SR10"
colnames(PFAS)[colnames(PFAS) == "c_age_days_comp_d_qu_11y"] <- "DPP_SR11"
colnames(PFAS)[colnames(PFAS) == "child_age_days_qu14"] <- "DPP_SR14"
colnames(PFAS)[colnames(PFAS) == "child_age_days_qu15"] <- "DPP_SR15"
colnames(PFAS)[colnames(PFAS) == "child_age_days_qu16"] <- "DPP_SR16"
# AGE AT WEIGHT MEASUREMENT (SELF REPORTED)
# summary(PFAS$m_age_days_COMP_D_4YQ)
# summary(PFAS$m_age_days_COMP_D_QU5Y)
# summary(PFAS$m_age_days_COMP_D_QU6Y)
# summary(PFAS$m_age_days_comp_d_qu_8y)
# summary(PFAS$m_age_days_comp_d_qu_9y)
# summary(PFAS$m_age_days_comp_d_qu_10y)
# summary(PFAS$m_age_days_comp_d_qu_11y)
# summary(PFAS$m_age_days_qu14)
# summary(PFAS$m_age_days_qu15)
# summary(PFAS$m_age_days_qu16)
colnames(PFAS)[colnames(PFAS) == "m_age_days_COMP_D_4YQ"] <- "AGE_SR3"
colnames(PFAS)[colnames(PFAS) == "m_age_days_COMP_D_QU5Y"] <- "AGE_SR4"
colnames(PFAS)[colnames(PFAS) == "m_age_days_COMP_D_QU6Y"] <- "AGE_SR5"
colnames(PFAS)[colnames(PFAS) == "m_age_days_comp_d_qu_8y"] <- "AGE_SR6"
colnames(PFAS)[colnames(PFAS) == "m_age_days_comp_d_qu_9y"] <- "AGE_SR7"
colnames(PFAS)[colnames(PFAS) == "m_age_days_comp_d_qu_10y"] <- "AGE_SR8"
colnames(PFAS)[colnames(PFAS) == "m_age_days_comp_d_qu11y"] <- "AGE_SR9"
colnames(PFAS)[colnames(PFAS) == "m_age_days_qu14"] <- "AGE_SR10"
colnames(PFAS)[colnames(PFAS) == "m_age_days_qu15"] <- "AGE_SR11"
colnames(PFAS)[colnames(PFAS) == "m_age_days_qu16"] <- "AGE_SR12"
PFAS_1 <- subset(PFAS, !is.na(PFOS)) # MISSING PFAS DATA
PFAS_2 <- subset(PFAS_1, t1diab_mom_epi_epia_d == 0 | is.na(t1diab_mom_epi_epia_d)) # HISTORY OF T1 DIABETES
PFAS_2 <- subset(PFAS_2, t2diab_mom_epi_epia_d == 0 | is.na(t2diab_mom_epi_epia_d)) # HISTORY OF T2 DIABETES
table(PFAS_2$LOD_PFOS)
table(PFAS_2$pfdeaLOD)
table(PFAS_2$PFOSA)
table(PFAS_2$LOD_PFOS)
table(PFAS_2$LOD_PFOA)
table(PFAS_2$LOD_PFNA)
table(PFAS_2$LOD_PFHxS)
table(PFAS_2$LOD_MeF)
table(PFAS_2$LOD_EtF)
table(PFAS_2$pfdeaLOD)
table(PFAS_2$PFOSA)
table(PFAS_2$pfdeaLOD)
table(PFAS_2$PFDeA)
table(PFAS_2$PFOSA)
