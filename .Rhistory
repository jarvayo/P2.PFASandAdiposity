##### LOAD PACKAGES
library("bkmr")
library("ggplot2")
library("beepr")
library("tidyverse")
##### LOAD DATASET
PFAS_D <-read_csv("C:/Users/jarva/Desktop/James-Todd Lab/P3.PFASandAdiposity/Data/PFAS_D.csv")
##### LOAD WORKSPACE
load("C:/Users/jarva/Desktop/James-Todd Lab/P3.PFASandAdiposity/Data/P3_BKMR_D.Rdata")
##### PREPARE VARIABLES FOR BKMR MODELS #####
##### ANTHRO + DXA DATASET (N = 433)
# CREATE MIXTURE OF PFAS
mixture_d <- as.matrix(cbind(PFAS_D$PFOS, PFAS_D$PFOA, PFAS_D$PFNA, PFAS_D$PFHxS,
PFAS_D$MeFOSAA, PFAS_D$EtFOSAA))
# RENAME VARIABLES IN MIXTURE
colnames(mixture_d) <- c("PFOS", "PFOA", "PFNA", "PFHxS", "MeFOSAA", "EtFOSAA")
# LOG2-TRANSFORM MIXTURE
l2mixture_d <- apply(mixture_d, 2, log2)
# SCALE MIXTURE VARIABLES TO THE MEAN
l2mixture_d_z <- scale(l2mixture_d)
# SET THE OUTCOME
TrnkFat <- PFAS_D$TrnkFat
TotFat <- PFAS_D$TotFat
# TotFatPct <- PFAS_D$TotFatPct
# LNTFIN <- PFAS_D$LNTFIN
# LNBFIN <- PFAS_D$LNBFIN
# TotLean <- PFAS_D$TotLean
# CREATE THE COVARIATE MATRIX
cov_d <- as.matrix(cbind(PFAS_D$age_s, PFAS_D$race, PFAS_D$bmi_cat, PFAS_D$smoke,
PFAS_D$parity, PFAS_D$married, PFAS_D$fish_s, PFAS_D$height_s))
# SET THE SEED
set.seed(1234)
# CREATE KNOTS
knots_dl2_z <- fields::cover.design(l2mixture_d_z, nd = 40)$design
##### VALUES TO KEEP AFTER BURIN/THIN
#
sel <- seq(0,20000,by = 50)
##### ACCESS CONVERGENCE WITH TRACEPLOTS
TracePlot(fit = l2m_trnkfat, par = "beta", sel = sel)
TracePlot(fit = l2m_totfat, par = "beta", sel = sel)
# TracePlot(fit = l2m_totfatpct, par = "beta", sel = sel)
# TracePlot(fit = l2m_tfin, par = "beta", sel = sel)
# TracePlot(fit = l2m_bfin, par = "beta", sel = sel)
# TracePlot(fit = m_totlean, par = "beta", sel = sel)
##### VALUES TO KEEP AFTER BURNING/THIN (ACCORDING TO THE TRACEPLOT FUNCTION ABOVE)
sel_final <- seq(1200, 20000, by = 1)
##### DETERMINE RISK ASSOCIATED WITH THE OVERALL MIXTURE
# TRUNK FAT MASS
overall_trnkfat <- OverallRiskSummaries(fit = l2m_trnkfat, q.fixed = 0.50, sel = sel_final,
method = "approx", qs = seq(0.25, 0.75, by = 0.05))
# TOTAL BODY FAT MASS
overall_totfat <- OverallRiskSummaries(fit = l2m_totfat, q.fixed = 0.50, sel = sel_final,
method = "approx", qs = seq(0.25, 0.75, by = 0.05))
# # TOTAL BODY FAT PERCENT
# overall_totfatpct <- OverallRiskSummaries(fit = l2m_totfatpct, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # TRUNK FAT MASS INDEX
# overall_tfin <- OverallRiskSummaries(fit = l2m_tfin, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # TOTAL BODY FAT MASS INDEX
# overall_bfin <- OverallRiskSummaries(fit = l2m_bfin, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # TOTAL BODY LEAN MASS
# overall_totlean <- OverallRiskSummaries(fit = m_totlean, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
##### PLOT RISK ASSOCIATED WITH THE OVERALL MIXTURE
# TRUNK FAT MASS
p_overall_trnkfat <- ggplot(overall_trnkfat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
geom_pointrange() +
scale_y_continuous(name = "Trunk fat mass (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 25))
p_overall_trnkfat
# TOTAL BODY FAT MASS
p_overall_totfat <- ggplot(overall_totfat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
geom_pointrange() +
scale_y_continuous(name = "Body fat mass (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 25))
p_overall_totfat
# # TOTAL BODY FAT PERCENT
# p_overall_totfatpct <- ggplot(overall_totfatpct, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
#                geom_pointrange() +
#                scale_y_continuous(name = "Body fat (%)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_totfatpct
#
#
# # TRUNK FAT MASS INDEX
# p_overall_tfin <- ggplot(overall_tfin, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
#                geom_pointrange() +
#                scale_y_continuous(name = "Trunk fat mass index (% diff.)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_tfin
#
#
# # TOTAL BODY FAT MASS INDEX
# p_overall_bfin <- ggplot(overall_bfin, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
#                geom_pointrange() +
#                scale_y_continuous(name = "Body fat mass index (% diff.)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_bfin
#
#
# # TOTAL BODY LEAN MASS
# p_overall_totlean <- ggplot(overall_totlean, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
#                geom_pointrange() +
#                scale_y_continuous(name = "Body lean mass (kg)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_totlean
p_overall_trnkfat <- ggplot(overall_trnkfat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
geom_pointrange() +
scale_y_continuous(name = "Trunk fat mass (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 25))
p_overall_trnkfat
# TOTAL BODY FAT MASS
p_overall_totfat <- ggplot(overall_totfat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
geom_pointrange() +
scale_y_continuous(name = "Body fat mass (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 25))
p_overall_totfat
p_overall_trnkfat <- ggplot(overall_trnkfat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
geom_pointrange() +
scale_y_continuous(name = "Trunk fat mass (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 24))
p_overall_trnkfat
# TOTAL BODY FAT MASS
p_overall_totfat <- ggplot(overall_totfat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", linewidth = 1, color = "red") +
geom_pointrange() +
scale_y_continuous(name = "Body fat mass (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 24))
p_overall_totfat
##### LOAD PACKAGES
library("bkmr")
library("ggplot2")
library("beepr")
library("tidyverse")
##### LOAD DATASET
PFAS_A <-read_csv("C:/Users/jarva/Desktop/James-Todd Lab/P3.PFASandAdiposity/Data/PFAS_A.csv")
##### LOAD WORKSPACE
load("C:/Users/jarva/Desktop/James-Todd Lab/P3.PFASandAdiposity/Data/P3_BKMR_A.Rdata")
##### PREPARE VARIABLES FOR BKMR MODELS #####
##### ANTHRO DATASET (N = 549)
# CREATE MIXTURE OF PFAS
mixture_a <- as.matrix(cbind(PFAS_A$PFOS, PFAS_A$PFOA, PFAS_A$PFNA, PFAS_A$PFHxS,
PFAS_A$MeFOSAA, PFAS_A$EtFOSAA))
# RENAME VARIABLES IN MIXTURE
colnames(mixture_a) <- c("PFOS", "PFOA", "PFNA", "PFHxS", "MeFOSAA", "EtFOSAA")
# LOG2-TRANSFORM MIXTURE
l2mixture_a <- apply(mixture_a, 2, log2)
# SCALE MIXTURE VARIABLES TO THE MEAN
l2mixture_a_z <- scale(l2mixture_a)
# SET THE OUTCOME
Weight <- PFAS_A$Weight
Waist <- PFAS_A$Waist
# BMI <- PFAS_A$LNBMI
# WHR <- PFAS_A$WHR
# WHtR <- PFAS_A$WHtR
# MUAC <- PFAS_A$MUAC
# FatPct <- PFAS_A$FatPct
# FatMass <- PFAS_A$LNFAT
# CREAT THE COVARIATE MATRIX
cov_a <- as.matrix(cbind(PFAS_A$age_s, PFAS_A$race, PFAS_A$bmi_cat, PFAS_A$smoke,
PFAS_A$parity, PFAS_A$married, PFAS_A$fish_s, PFAS_A$height_s))
# SET THE SEED
set.seed(1234)
# CREATE KNOTS
knots_al2_z <- fields::cover.design(l2mixture_a_z, nd = 50)$design
##### TRANSFORM VARIABLES TO NUMERIC FOR BKMR COVARIATE MATRIX
# RENAME
PFAS_A$age <- PFAS_A$age_mom_enroll_d
PFAS_A$menar <- PFAS_A$mom_firstperiod_12y
PFAS_A$bmi <- PFAS_A$bmi_mom_prepreg_d
PFAS_A$race <- PFAS_A$race2_mom_epi_epia_d
PFAS_A$income <- PFAS_A$gt70k
PFAS_A$parity <- PFAS_A$parity_d
PFAS_A$smoke <- PFAS_A$smokpreg_final_d
PFAS_A$married <- PFAS_A$married_cohab
PFAS_A$edu <- PFAS_A$coll_grad
PFAS_A$fish <- PFAS_A$fish_d_f1
PFAS_A$darkmeat <- PFAS_A$dark_meat_f1
# REFACTOR AND RELABEL
PFAS_A$bmi_cat <- ifelse(PFAS_A$bmi <18.5, 0,
ifelse(PFAS_A$bmi >=18.5 & PFAS_A$bmi < 25.0, 1,
ifelse(PFAS_A$bmi >=25.0 & PFAS_A$bmi < 30.0, 2,
ifelse(PFAS_A$bmi >=30.0 & PFAS_A$bmi < 35.0, 3,
ifelse(PFAS_A$bmi >=35.0, 4, 99)))))
PFAS_A$race <- ifelse(PFAS_A$race == "white", 0,
ifelse(PFAS_A$race == "black", 1,
ifelse(PFAS_A$race == "hispa", 2,
ifelse(PFAS_A$race == "asian", 3,
ifelse(PFAS_A$race == "other", 4, 4)))))
PFAS_A$income <- ifelse(PFAS_A$income == 1, 1, 0)
PFAS_A$parity <- ifelse(PFAS_A$parity == 0, 0,
ifelse(PFAS_A$parity == 1, 1,
ifelse(PFAS_A$parity > 1, 2, 0)))
PFAS_A$smoke <- ifelse(PFAS_A$smoke == "former", 0,
ifelse(PFAS_A$smoke == "smoke preg", 1,
ifelse(PFAS_A$smoke == "xnever", 2, 2)))
PFAS_A$married <- ifelse(PFAS_A$married == 1, 1, 0)
PFAS_A$edu <- ifelse(PFAS_A$edu == 1, 1, 0)
# SET CATEGORICAL VARIABLES AS FACTORS
PFAS_A$bmi_cat <- as.factor(PFAS_A$bmi_cat)
PFAS_A$race <- as.factor(PFAS_A$race)
PFAS_A$income <- as.factor(PFAS_A$income)
PFAS_A$parity <- as.factor(PFAS_A$parity)
PFAS_A$smoke <- as.factor(PFAS_A$smoke)
PFAS_A$married <- as.factor(PFAS_A$married)
PFAS_A$edu <- as.factor(PFAS_A$edu)
# CENTER AND SCALE CONTINUOUS VARIABLES
PFAS_A$height_s <- scale(PFAS_A$height)
PFAS_A$age_s <- scale(PFAS_A$age)
PFAS_A$menar_s <- scale(PFAS_A$menar)
PFAS_A$fish_s <- scale(PFAS_A$fish)
PFAS_A$darkmeat_s <- scale(PFAS_A$darkmeat)
##### PREPARE VARIABLES FOR BKMR MODELS #####
##### ANTHRO DATASET (N = 549)
# CREATE MIXTURE OF PFAS
mixture_a <- as.matrix(cbind(PFAS_A$PFOS, PFAS_A$PFOA, PFAS_A$PFNA, PFAS_A$PFHxS,
PFAS_A$MeFOSAA, PFAS_A$EtFOSAA))
# RENAME VARIABLES IN MIXTURE
colnames(mixture_a) <- c("PFOS", "PFOA", "PFNA", "PFHxS", "MeFOSAA", "EtFOSAA")
# LOG2-TRANSFORM MIXTURE
l2mixture_a <- apply(mixture_a, 2, log2)
# SCALE MIXTURE VARIABLES TO THE MEAN
l2mixture_a_z <- scale(l2mixture_a)
# SET THE OUTCOME
Weight <- PFAS_A$Weight
Waist <- PFAS_A$Waist
# BMI <- PFAS_A$LNBMI
# WHR <- PFAS_A$WHR
# WHtR <- PFAS_A$WHtR
# MUAC <- PFAS_A$MUAC
# FatPct <- PFAS_A$FatPct
# FatMass <- PFAS_A$LNFAT
# CREAT THE COVARIATE MATRIX
cov_a <- as.matrix(cbind(PFAS_A$age_s, PFAS_A$race, PFAS_A$bmi_cat, PFAS_A$smoke,
PFAS_A$parity, PFAS_A$married, PFAS_A$fish_s, PFAS_A$height_s))
# SET THE SEED
set.seed(1234)
# CREATE KNOTS
knots_al2_z <- fields::cover.design(l2mixture_a_z, nd = 50)$design
##### VALUES TO KEEP AFTER BURIN/THIN
#
sel <- seq(0,20000,by = 50)
##### ACCESS CONVERGENCE WITH TRACEPLOTS
TracePlot(fit = l2m_wt, par = "beta", sel = sel)
TracePlot(fit = l2m_waist, par = "beta", sel = sel)
# TracePlot(fit = l2m_bmi, par = "beta", sel = sel)
# TracePlot(fit = l2m_whr, par = "beta", sel = sel)
# TracePlot(fit = l2m_whtr, par = "beta", sel = sel)
# TracePlot(fit = l2m_muac, par = "beta", sel = sel)
# TracePlot(fit = m_bfat, par = "beta", sel = sel)
# TracePlot(fit = m_fat, par = "beta", sel = sel)
##### VALUES TO KEEP AFTER BURNING/THIN (ACCORDING TO THE TRACEPLOT FUNCTION ABOVE)
sel_final <- seq(1200, 20000, by = 1)
##### DETERMINE RISK ASSOCIATED WITH THE OVERALL MIXTURE
# WEIGHT
overall_wt <- OverallRiskSummaries(fit = l2m_wt, q.fixed = 0.50, sel = sel_final,
method = "approx", qs = seq(0.25, 0.75, by = 0.05))
# WAIST CIRCUMFERENCE
overall_waist <- OverallRiskSummaries(fit = l2m_waist, q.fixed = 0.50, sel = sel_final,
method = "approx", qs = seq(0.25, 0.75, by = 0.05))
# # BMI
# overall_bmi <- OverallRiskSummaries(fit = l2m_bmi, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # WAIST-TO-HIP RATIO
# overall_whr <- OverallRiskSummaries(fit = l2m_whr, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # WAIST-TO-HEIGHT RATIO
# overall_whtr <- OverallRiskSummaries(fit = l2m_whtr, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # MUAC
# overall_muac <- OverallRiskSummaries(fit = l2m_muac, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # BODY FAT %
# overall_bfat <- OverallRiskSummaries(fit = m_bfat, q.fixed = 0.50, sel = sel_final,
#                                                method = "approx", qs = seq(0.25, 0.75, by = 0.05))
#
# # BODT FAT MASS
# overall_fat <- OverallRiskSummaries(fit = m_fat, q.fixed = 0.50, sel = sel_final,
#                                       method = "approx", qs = seq(0.25, 0.75, by = 0.05))
##### PLOT RISK ASSOCIATED WITH THE OVERALL MIXTURE
# WEIGHT
p_overall_wt <- ggplot(overall_wt, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Weight (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 25))
p_overall_wt
# WAIST CIRCUMFERENCE
p_overall_waist <- ggplot(overall_waist, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Waist circ. (cm)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 25))
p_overall_waist
# # BMI
# p_overall_bmi <- ggplot(overall_bmi, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "BMI (% difference)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_bmi
# # WAIST-TO-HIP RATIO
# p_overall_whr <- ggplot(overall_whr, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "Waist-to-hip ratio")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_whr
#
#
# # WAIST-TO-HIP RATIO
# p_overall_whtr <- ggplot(overall_whtr, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "Waist-to-height ratio")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_whtr
#
#
# # MUAC
# p_overall_muac <- ggplot(overall_muac, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "MUAC (cm)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_muac
#
#
# # BODY FAT %
# p_overall_bfat <- ggplot(overall_bfat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "Body fat (%)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_bfat
#
#
# # BODY FAT MASS
# p_overall_fat <- ggplot(overall_fat, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
#                geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
#                geom_pointrange() +
#                scale_y_continuous(name = "Body fat mass (kg)")+
#                xlab("PFAS quantile") +
#                theme_classic()+ theme(
#                axis.text.x = element_text(size = 25),
#                axis.text.y = element_text(size = 25),
#                axis.title.x = element_text(angle = 0, color = 'black', size = 25),
#                axis.title.y = element_text(angle = 90, color = 'black', size = 25))
# p_overall_fat
p_overall_wt <- ggplot(overall_wt, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Weight (kg)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 24))
p_overall_wt
# WAIST CIRCUMFERENCE
p_overall_waist <- ggplot(overall_waist, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Waist circumference (cm)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 24))
p_overall_waist
p_overall_waist <- ggplot(overall_waist, aes(quantile, est, ymin = est - 1.96*sd, ymax = est + 1.96*sd)) +
geom_hline(yintercept = 00, linetype = "dashed", color = "red", linewidth = 1) +
geom_pointrange() +
scale_y_continuous(name = "Waist circ (cm)")+
xlab("PFAS quantile") +
theme_classic()+ theme(
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 24),
axis.title.x = element_text(angle = 0, color = 'black', size = 25),
axis.title.y = element_text(angle = 90, color = 'black', size = 24))
p_overall_waist
